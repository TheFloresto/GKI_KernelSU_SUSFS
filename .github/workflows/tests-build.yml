name: Create Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Choose Release Type"
        required: true
        type: choice
        options:
          - Actions
          - Pre-Release
          - Release
        default: Pre-Release

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set release body
        if: ${{ inputs.release_type == 'Release' || inputs.release_type == 'Pre-Release' }}
        run: |
          cat << 'EOF' > release_body.md
          
          Branch type for KSU: ${{ inputs.kernelsu_branch }}
          Wild Current Kernel Tag: ${{ env.NEW_TAG }}
      
          Features:
          -> Wild KSU Kernels & Others
          -> Multi Manager Support for Wild Kernels & Next Kernels (Not Recommended)
          -> SUSFS à¶ž v1.5.7
          -> Scope-Minimized Manual hooks v1.4
          -> Magic Mount Support
          -> Simple Maphide for LineageOS Detections
          -> Futile Maphide for jit-zygote-cache Detections
          -> Wireguard Support
          -> BBR Support
      
          Notes:
          -> Wild KSU & KernelSU-Next, SUS SU Mode 2 will show as disabled or not compatble due to non-kprobe hooks and is not needed anymore!
          -> Official Kernel Flasher is broken with latest susfs, try https://github.com/fatalcoder524/KernelFlasher/ or https://github.com/libxzr/HorizonKernelFlasher!
      
          Module: 
          -> https://github.com/sidex15/ksu_module_susfs
      
          Managers:
          -> Wild KSU: https://github.com/WildKernels/Wild_KSU / https://t.me/WildKernels
          -> KernelSU: https://github.com/tiann/KernelSU / https://t.me/KernelSU_group
          -> 5ec1cff's KernelSU: https://github.com/5ec1cff/KernelSU / https://t.me/mksu_ci
          -> KernelSU-Next: https://github.com/rifsxd/KernelSU-Next / https://t.me/ksunext_group
          -> rsuntk: https://github.com/rsuntk/KernelSU / https://t.me/rsukrnlsu
          -> backslashxx: https://github.com/backslashxx/KernelSU
      
          Commit Hashes (at the time of release):
          -> Wild KSU: [${{ env.WILD_REF }}](${{ env.WILD_URL }})
          -> KernelSU: [${{ env.KSU_REF }}](${{ env.KSU_URL }})
          -> 5ec1cff: [${{ env.MKSU_REF }}](${{ env.MKSU_URL }})
          -> KernelSU Next: [${{ env.NEXT_REF }}](${{ env.NEXT_URL }})
          -> SUSFS4KSU: 
            -> gki-android12-5.10: [${{ env.COMMIT_HASH_gki_android12_5_10 }}](${{ env.COMMIT_URL_gki_android12_5_10 }})
            -> gki-android13-5.10: [${{ env.COMMIT_HASH_gki_android13_5_10 }}](${{ env.COMMIT_URL_gki_android13_5_10 }})
            -> gki-android13-5.15: [${{ env.COMMIT_HASH_gki_android13_5_15 }}](${{ env.COMMIT_URL_gki_android13_5_15 }})
            -> gki-android14-5.15: [${{ env.COMMIT_HASH_gki_android14_5_15 }}](${{ env.COMMIT_URL_gki_android15_6_6 }})
            -> gki-android14-6.1: [${{ env.COMMIT_HASH_gki_android14_6_1 }}](${{ env.COMMIT_URL_gki_android14_6_1 }})
            -> gki-android15-6.6: [${{ env.COMMIT_HASH_gki_android15_6_6 }}](${{ env.COMMIT_URL_gki_android15_6_6 }})
          EOF

      - name: Create GitHub Release
        if: ${{ inputs.release_type == 'Release' || inputs.release_type == 'Pre-Release' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ inputs.release_type }}" == "Release" ]; then
            gh release create "${{ env.NEW_TAG }}" --title "Release ${{ env.NEW_TAG }}" --notes-file release_body.md
          elif [ "${{ inputs.release_type }}" == "Pre-Release" ]; then
            gh release create "${{ env.NEW_TAG }}" --title "Pre-Release ${{ env.NEW_TAG }}" --notes-file release_body.md --prerelease
          fi
